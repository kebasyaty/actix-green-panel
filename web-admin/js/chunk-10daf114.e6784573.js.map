{"version":3,"sources":["webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VCheckbox/VCheckbox.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["baseMixins","name","directives","ClickOutside","props","dark","disabled","fullscreen","light","maxWidth","type","String","default","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","isActive","this","stackMinZIndex","previousActiveElement","computed","contentClass","Boolean","$slots","$scopedSlots","watch","$attrs","hasOwnProperty","window","unbind","methods","target","e","_isDestroyed","$refs","content","contains","overlay","$el","activeZIndex","document","getOpenDependents","activator","getOpenDependentElements","some","el","focusable","querySelectorAll","showLazyContent","$createElement","root","class","attrs","role","tabindex","getScopeIdAttrs","on","keydown","onKeydown","style","zIndex","ref","appear","data","value","handler","closeConditional","include","transformOrigin","undefined","h","staticClass","attach","node","ripple","center","valueComparator","indeterminate","indeterminateIcon","offIcon","onIcon","inputIndeterminate","isDisabled","hasError","hasColor","checkboxAttrs","setTextColor","dense","genInput","toString","genRipple","functional","listeners","children","icon","VIcon","mergeData","click","f","mixins","inset","themeClasses","$listeners","action","hideSelected","items","itemDisabled","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","map","item","getValue","Object","tile","mousedown","VListItem","genTileContent","VListItemAction","color","input","$emit","VDivider","text","end","getMaskedCharacters","start","genHighlight","middle","index","hasItem","getDisabled","id","_uid","activeClass","inputValue","length","genAction","parent","scopedSlot","needsTile","innerHTML","genFilteredText","getText","VList","domProps","parsedItems","indexOf","slot","itemsLength","genTile","genHeader","genDivider","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","appendIcon","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","filterDuplicates","concat","counterValue","isFocused","hasChips","scopeId","$vnode","context","computedOwns","$vuetify","lang","t","select","selectItem","scopedSlots","console","VSelectList","$_menuProps","computedItems","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","onMenuActiveChange","immediate","getContent","uniqueValues","arr","val","internalValue","i","menu","isInteractive","VChip","close","small","onChipInput","key","JSON","last","selections","prefix","genAffix","suffix","VInput","readonly","autocomplete","placeholder","persistentPlaceholder","keypress","onKeyPress","attrs$","render","slots","slotName","listData","VMenu","scroll","onScroll","genSelection","selection","selected","setValue","isAppendInner","KEYBOARD_LOOKUP_THRESHOLD","now","performance","allItems","findIndex","Math","setTimeout","setMenuIndex","isReadonly","keyCode","onUpDown","onEscDown","onTabDown","onSpaceDown","getMenuIndex","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","findExistingIndex","values","v","appendInner","offsetY","offsetOverflow","allowOverflow","autoSelectFirst","filter","queryText","hideNoData","lazySearch","filteredItems","selectedItem","internalSearch","searchIsDirty","hasDisplayedItems","find","oldVal","activateMenu","curIndex","curItem","lastIndex","nextIndex","nextItem","hasSlot","setSearch","selectedValues","currentItem","currentItemText","event","active","chipGroup","closeIcon","closeLabel","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","breakingProps","original","replacement","left","right","size","hasClose","setBackgroundColor","Resize","isInMenu","theme","auto","Number","offsetX","openOnHover","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","tiles","menuWidth","dimensions","parseFloat","calcXOverflow","calcLeft","height","minWidth","pageWidth","calculatedMaxWidth","isNaN","parseInt","top","calcYOverflow","next","contentHeight","appOffset","duration","container","prev","classList","remove","maxScrollTop","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","attributes","isContentActive","options","menuable__content__active","onKeyDown","nextTile","prevTile","changeListIndex","clearTimeout","arg","onResize","returnValue","originalValue","model","prop","falseValue","trueValue","isDark","prevent","checked","blur","change","focus"],"mappings":"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","file":"js/chunk-10daf114.e6784573.js","sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          this.previousActiveElement = document.activeElement as HTMLElement\n          this.$refs.content.focus()\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n            ripple: false,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      this.$refs.menu.getTiles()\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) {\n          this.setMenuIndex(-1)\n        } else {\n          const index = this.allItems.indexOf(item)\n          if (~index) {\n            this.$nextTick(() => this.$refs.menu.getTiles())\n            setTimeout(() => this.setMenuIndex(index))\n          }\n        }\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value\n        this.$emit('change', value)\n      }\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\nimport goTo from '../../services/goto'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        const scrollTop = this.$refs.content.scrollTop\n        const contentHeight = this.$refs.content.clientHeight\n\n        if (scrollTop > tile.offsetTop - 8) {\n          goTo(tile.offsetTop - tile.clientHeight, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        } else if (scrollTop + contentHeight < tile.offsetTop + tile.clientHeight + 8) {\n          goTo(tile.offsetTop - contentHeight + tile.clientHeight * 2, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        }\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.end) {\n        this.lastTile()\n      } else if (e.keyCode === keyCodes.home) {\n        this.firstTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    lastTile () {\n      const tile = this.tiles[this.tiles.length - 1]\n\n      if (!tile) return\n\n      this.listIndex = this.tiles.length - 1\n\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    firstTile () {\n      const tile = this.tiles[0]\n\n      if (!tile) return\n\n      this.listIndex = 0\n\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}