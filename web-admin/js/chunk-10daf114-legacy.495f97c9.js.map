{"version":3,"sources":["webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VCheckbox/VCheckbox.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["baseMixins","name","directives","ClickOutside","props","dark","disabled","fullscreen","light","maxWidth","type","String","default","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","data","activatedBy","animate","animateTimeout","isActive","this","stackMinZIndex","previousActiveElement","computed","classes","contentClasses","hasActivator","Boolean","$slots","$scopedSlots","watch","created","$attrs","hasOwnProperty","beforeMount","beforeDestroy","window","unbind","methods","animateClick","closeConditional","target","e","_isDestroyed","$refs","content","contains","overlay","$el","activeZIndex","hideScroll","document","show","bind","onClickOutside","onKeydown","getOpenDependents","activator","onFocusin","getOpenDependentElements","some","el","focusable","querySelectorAll","genContent","showLazyContent","root","class","attrs","role","tabindex","on","keydown","style","zIndex","ref","genTransition","$createElement","appear","genInnerContent","value","handler","include","transformOrigin","undefined","render","h","staticClass","attach","isDark","node","ripple","genRipple","center","valueComparator","indeterminate","indeterminateIcon","offIcon","onIcon","inputIndeterminate","computedIcon","validationState","isDisabled","hasError","hasColor","genCheckbox","checkboxAttrs","setTextColor","dense","genInput","toString","genDefaultSlot","functional","children","listeners","icon","VIcon","mergeData","click","f","mixins","inset","themeClasses","$listeners","action","hideSelected","items","itemDisabled","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","parsedItems","map","item","tileActiveClass","Object","staticNoDataTile","tile","mousedown","VListItem","genTileContent","genAction","VListItemAction","color","input","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","index","genTile","hasItem","getDisabled","id","_uid","activeClass","inputValue","length","parent","scopedSlot","needsTile","innerHTML","getText","VList","domProps","indexOf","getValue","slot","itemsLength","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","appendIcon","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","computedCounterValue","counterValue","isFocused","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","internalValue","immediate","blur","activateMenu","clearableCallback","getContent","uniqueValues","arr","val","findExistingIndex","i","menu","genChipSelection","isInteractive","VChip","close","small","key","JSON","genCommaSelection","last","selections","prefix","genAffix","suffix","genIcon","VInput","readonly","autocomplete","placeholder","persistentPlaceholder","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","genSelections","genSelection","genSlotSelection","selection","selected","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","Math","setTimeout","onKeyDown","isReadonly","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","setMenuIndex","setSelectedItems","values","v","appendInner","offsetY","offsetOverflow","allowOverflow","autoSelectFirst","filter","queryText","hideNoData","lazySearch","selectedValues","hasDisplayedItems","filteredItems","currentRange","selectedItem","internalSearch","get","set","isAnyValueAllowed","searchIsDirty","isSearching","find","oldVal","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","changeSelectedIndex","deleteCurrentItem","curIndex","curItem","lastIndex","nextIndex","nextItem","onInput","setSearch","updateSelf","onCopy","currentItem","currentItemText","event","active","chipGroup","closeIcon","closeLabel","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","breakingProps","original","replacement","genFilter","left","genClose","right","size","setBackgroundColor","Resize","provide","isInMenu","theme","auto","Number","offsetX","openOnHover","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","tiles","calculatedLeft","menuWidth","dimensions","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","height","calculatedMaxWidth","calculatedMinWidth","minWidth","pageWidth","isNaN","parseInt","calculatedTop","top","calcYOverflow","hasClickableTiles","styles","isContentActive","next","contentHeight","appOffset","duration","container","prev","classList","remove","mounted","activate","calcScrollPosition","maxScrollTop","calcLeftAuto","calcTopAuto","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","genActivatorAttributes","attributes","genActivatorListeners","genDirectives","options","menuable__content__active","contentClass","getTiles","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","lastTile","firstTile","onResize","clearTimeout","arg","returnValue","originalValue","save","model","prop","falseValue","trueValue","computedColor","isMultiple","rippleState","genLabel","prevent","checked","change","focus","onChange","onFocus"],"mappings":"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","file":"js/chunk-10daf114-legacy.495f97c9.js","sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n      previousActiveElement: null as HTMLElement | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n        this.previousActiveElement?.focus()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      // Double nextTick to wait for lazy content to be generated\n      this.$nextTick(() => {\n        this.$nextTick(() => {\n          this.previousActiveElement = document.activeElement as HTMLElement\n          this.$refs.content.focus()\n          this.bind()\n        })\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n            ripple: false,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      this.$refs.menu.getTiles()\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) {\n          this.setMenuIndex(-1)\n        } else {\n          const index = this.allItems.indexOf(item)\n          if (~index) {\n            this.$nextTick(() => this.$refs.menu.getTiles())\n            setTimeout(() => this.setMenuIndex(index))\n          }\n        }\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value\n        this.$emit('change', value)\n      }\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\nimport goTo from '../../services/goto'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        const scrollTop = this.$refs.content.scrollTop\n        const contentHeight = this.$refs.content.clientHeight\n\n        if (scrollTop > tile.offsetTop - 8) {\n          goTo(tile.offsetTop - tile.clientHeight, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        } else if (scrollTop + contentHeight < tile.offsetTop + tile.clientHeight + 8) {\n          goTo(tile.offsetTop - contentHeight + tile.clientHeight * 2, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        }\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.end) {\n        this.lastTile()\n      } else if (e.keyCode === keyCodes.home) {\n        this.firstTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    lastTile () {\n      const tile = this.tiles[this.tiles.length - 1]\n\n      if (!tile) return\n\n      this.listIndex = this.tiles.length - 1\n\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    firstTile () {\n      const tile = this.tiles[0]\n\n      if (!tile) return\n\n      this.listIndex = 0\n\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}